{"version":3,"sources":["useApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useApi","useState","data","setData","getData","a","axios","get","httpAgent","response","console","log","error","useEffect","App","synth","Tone","toDestination","play","now","triggerAttackRelease","onClick","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAuBeA,MApBf,WAAmB,IAAD,EACQC,mBAAS,IADjB,mBACTC,EADS,KACHC,EADG,KAEVC,EAAO,uCAAG,4BAAAC,EAAA,+EAEWC,IAAMC,IAC3B,4CACA,CAAEC,WAAW,IAJH,OAENC,EAFM,OAMZN,EAAQM,GACRC,QAAQC,IAAIF,GAPA,gDASZC,QAAQE,MAAR,MATY,yDAAH,qDAeb,OAHAC,qBAAU,WACRT,MACC,IACI,CAAEF,S,OCQIY,MAxBf,WAAgB,IACNZ,EAASF,IAATE,KACFa,GAAQ,IAAIC,KAAaC,gBAEzBC,EAAI,uCAAG,4BAAAb,EAAA,sEACLW,MADK,OAEXN,QAAQC,IAAI,kBACNQ,EAAMH,MACZD,EAAMK,qBAAqB,KAAM,KAAMD,GACvCJ,EAAMK,qBAAqB,KAAM,KAAMD,EAAM,IAC7CJ,EAAMK,qBAAqB,KAAM,KAAMD,EAAM,GANlC,2CAAH,qDASV,OACE,gCACE,gCACG,IACD,wBAAQE,QAASH,EAAjB,4BAEF,8BAAMI,KAAKC,UAAUrB,SCTZsB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07b86438.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useApi() {\n  const [data, setData] = useState({});\n  const getData = async () => {\n    try {\n      const response = await axios.get(\n        \"https://covid-api.mmediagroup.fr/v1/cases\",\n        { httpAgent: true }\n      );\n      setData(response);\n      console.log(response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return { data };\n}\n\nexport default useApi;\n","import React from \"react\";\nimport useApi from \"./useApi\";\nimport * as Tone from \"tone\";\n\nfunction App() {\n  const { data } = useApi();\n  const synth = new Tone.Synth().toDestination();\n\n  const play = async () => {\n    await Tone.start();\n    console.log(\"audio is ready\");\n    const now = Tone.now();\n    synth.triggerAttackRelease(\"C4\", \"8n\", now);\n    synth.triggerAttackRelease(\"E4\", \"8n\", now + 0.5);\n    synth.triggerAttackRelease(\"G4\", \"8n\", now + 1);\n  };\n\n  return (\n    <div>\n      <div>\n        {\" \"}\n        <button onClick={play}>Start Sound</button>\n      </div>\n      <div>{JSON.stringify(data)}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}