{"version":3,"sources":["useApi.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["useApi","useState","data","setData","getData","a","axios","get","response","console","log","error","useEffect","App","toneInitialized","setToneInitialized","synth","Tone","toDestination","bassSynth","play","time","triggerAttackRelease","start","bpm","value","stop","onClick","JSON","stringify","fakeData","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"wx4IAsBeA,MAnBf,WAAmB,IAAD,EACQC,qBADR,mBACTC,EADS,KACHC,EADG,KAEVC,EAAO,uCAAG,4BAAAC,EAAA,+EAEWC,IAAMC,IAC3B,iFAHU,OAENC,EAFM,OAKZL,EAAQK,GACRC,QAAQC,IAAI,eAAgBF,GANhB,gDAQZC,QAAQE,MAAR,MARY,yDAAH,qDAcb,OAHAC,qBAAU,WACRR,MACC,IACI,CAAEF,S,eCyBIW,MAxCf,WAAgB,IACNX,EAASF,IAATE,KADK,EAEiCD,oBAAS,GAF1C,mBAENa,EAFM,KAEWC,EAFX,KAGPC,GAAQ,IAAIC,KAAaC,gBACzBC,GAAY,IAAIF,KAAqBC,gBAErCE,EAAI,uCAAG,sBAAAf,EAAA,yDACNS,EADM,gCAEHG,MAFG,OAGTR,QAAQC,IAAI,kBACZK,GAAmB,GAJV,OAOE,IAAIE,KAAU,SAACI,GAC1BL,EAAMM,qBAAqB,KAAM,KAAMD,GACvCF,EAAUG,qBAAqB,KAAM,MAAOD,KAC3C,MAAME,MAAM,GACfN,IAAeO,IAAIC,MAAQ,IAC3BR,IAAeM,QAZJ,2CAAH,qDAmBJG,EAAI,uCAAG,sBAAArB,EAAA,sDACXY,IAAeS,OADJ,2CAAH,qDAIV,OACE,gCACE,gCACE,wBAAQC,QAASP,EAAjB,yBACA,wBAAQO,QAASD,EAAjB,2BAEF,8BAAME,KAAKC,UAAL,OAAe3B,QAAf,IAAeA,IAAQ4B,SCzBpBC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.b4a01e91.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\n\nfunction useApi() {\n  const [data, setData] = useState<any>();\n  const getData = async () => {\n    try {\n      const response = await axios.get(\n        \"https://cors-anywhere.herokuapp.com/https://covid-api.mmediagroup.fr/v1/cases\"\n      );\n      setData(response);\n      console.log(\"Api response\", response);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  useEffect(() => {\n    getData();\n  }, []);\n  return { data };\n}\n\nexport default useApi;\n","import React, { useState } from \"react\";\nimport useApi from \"./useApi\";\nimport * as Tone from \"tone\";\nimport fakeData from \"./fakeApi.json\";\nfunction App() {\n  const { data } = useApi();\n  const [toneInitialized, setToneInitialized] = useState(false);\n  const synth = new Tone.Synth().toDestination();\n  const bassSynth = new Tone.MembraneSynth().toDestination();\n\n  const play = async () => {\n    if (!toneInitialized) {\n      await Tone.start();\n      console.log(\"audio is ready\");\n      setToneInitialized(true);\n    }\n\n    const loop = new Tone.Loop((time) => {\n      synth.triggerAttackRelease(\"G2\", \"4n\", time);\n      bassSynth.triggerAttackRelease(\"c0\", \"16n\", time);\n    }, \"4n\").start(0);\n    Tone.Transport.bpm.value = 128;\n    Tone.Transport.start();\n    // const now = Tone.now();\n    // synth.triggerAttackRelease(\"C4\", \"8n\", now);\n    // synth.triggerAttackRelease(\"E4\", \"8n\", now + 0.5);\n    // synth.triggerAttackRelease(\"G4\", \"8n\", now + 1);\n  };\n\n  const stop = async () => {\n    Tone.Transport.stop();\n  };\n\n  return (\n    <div>\n      <div>\n        <button onClick={play}>Start Sound</button>\n        <button onClick={stop}>Stop Sound</button>\n      </div>\n      <div>{JSON.stringify(data ?? fakeData)}</div>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}